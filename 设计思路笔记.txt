1、开启一个N*128字节的数组，对应EEPROM的的地址，开机的时候将EEPROM的数据dowmlaod到数组中，遇见0X0D结束。
2、收到上位机的指令的时候，对比N*128个数组的前三个字节，找出相对应的指令在二维数组中的哪组，将相应的数据取出来
配合上位机发来的数据，组成完整的数据包显示相应的数据。
3、此方法局限在有限的EEPROM和指令，模块当中所有的指令数据都保存在EEPROM。

模板协议：

帧头(2byte)      01  08
485地址(1byte)   02
命令(1byte)      (模板：T,模板结束：E,数据:D)
命令序号(1byte) 
通讯数据字节数(2byte)         
字号(1byte)
显示字节宽度(1byte)
显示模式(1byte)
X起始地址(2byte)
Y起始地址(2byte)
背景颜色(2byte)
字体颜色(2byte)
CRC16校验(2byte)
帧尾(2byte)

通讯协议：
帧头(2byte)      01  08
485地址(1byte)   02
命令(1byte)      M(模板：M,数据:D,命令：C)
命令序号(1byte) 
通讯数据字节数(2byte)   
数据字节，根据模板可变
CRC16校验(2byte)
帧尾(2byte)


模板测试：
01 58 03 54 00 00 0B 50 03 00 00 10 00 00 FF FF 00 00 0B F3 0D 0A
01 58 03 54 01 00 0B 50 04 01 00 00 00 50 00 00 FF FF 3C CD 0D 0A
01 58 03 54 02 00 0B 40 04 00 00 00 00 A0 00 00 F8 00 B7 41 0D 0A
01 58 03 45 03 00 0B 10 08 00 00 00 00 E0 00 00 00 1F B2 1E 0D 0A    //模板结束，只要是给EEPROM用的

显示数据测试：

01 58 03 44 00 00 06 41 42 43 44 45 46 26 66 0D 0A
01 58 03 44 01 00 08 CE A4 C0 D6 BA A3 B4 C4 A5 31 0D 0A
01 58 03 44 02 00 08 CE A4 C0 D6 BA A3 B4 C4 DD CB 0D 0A
01 58 03 44 03 00 10 CE A4 C0 D6 BA A3 B4 C4 CE A4 C0 D6 BA A3 B4 C4 F9 DC 0D 0A

